class Solution {

    public void BinarySearchLeftIndex(int[] nums, int key, int[] index) {
        int left = 0;
        int right = nums.length - 1;

        while(left <= right) {
            int mid = left + (right-left)/2;

            if(nums[mid] == key) {
                index[0] = mid;
                right = mid - 1;
            }
            else if(nums[mid] < key) {
                left = mid + 1;
            }
            else {
                right = mid - 1;
            }
        }

    }

    public void BinarySearchRightIndex(int[] nums, int key,int[] index) {
        int left = 0;
        int right = nums.length - 1;

        while(left <= right) {
            int mid = left + (right-left)/2;

            if(nums[mid] == key) {
                index[1] = mid;
                left = mid + 1;
            }
            else if(nums[mid] < key) {
                left = mid + 1;
            }
            else {
                right = mid - 1;
            }
        }

    }
    public int[] searchRange(int[] nums, int target) {
        int[] ans = {-1,-1};
        int length = nums.length;
        if(length < 1)
            return ans;
        BinarySearchLeftIndex(nums, target, ans);
        BinarySearchRightIndex(nums, target, ans);

        return ans;
        
            
        
    }
}
