/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution 
{
public:
    bool hasCycle(ListNode *head) 
    {
        if(head==NULL)
            return false;
        if(head->next==NULL)
            return false;
        if(head->next==head)
            return true;
        if(head->next->next==NULL)
            return false;
        if(head->next->next==head)
            return true;
        ListNode* spointer=head->next;
        ListNode* fpointer=head->next->next;
        while(fpointer!=NULL && fpointer->next!=NULL)
        {
            if(spointer==fpointer)
                return true;
            spointer=spointer->next;
            fpointer=fpointer->next->next;
        }
        
        return false;
    }
};
